python
======

2012.05.04
----------

   1. install

   change requirements.txt
      remove django, httplib2

   use ming32 compile
   install MinGW with C++ Compiler option checked
   add C:\MinGW\bin to your PATH
   in PYTHONPATH\Lib\distutils, create a file distutils.cfg and add these lines:
   [build]
   compiler=mingw32

   >cd D:\ruby-1.9.3-p0-i386-mingw32
   >msys.bat
   >cd ..
   >pip install -r requirements.txt

2012.03.14
----------

   1. pythonic

   a) 0-10 求偶 v = [i for i in range(10) if i % 2 == 0]

   b) zip
>>> keys = ['a', 'b', 'c']
>>> values = [1, 2, 3]
>>> dictionary = dict(zip(keys, values))
>>> print dictionary
{'a': 1, 'b': 2, 'c': 3}

   c) 字符串连接
#以前是这样写的
fruits = ['apple', 'banana']
result = ''
for f in fruits:
    result += f

#现在可以这样：
fruits = ['apple', 'banana']
result = ''.join(fruits)

   d) 判断一个key是否在一个dict里面
if key in dict_example:
    do something
 现在要这样写，就不用使用in操作了。

if dict_example.has_key(key):
    do something

   e) 去掉list中的重复元素：

old_list = [1,1,1,3,4]
new_list = list(set(old_list))

   f) 分隔一个字符串，去里面的元素，但是空白字符串不要

names = 'jianpx, yy, mm, , kk'
result = [name for name in names.split(',') if name.strip()]

2012.03.07
----------

   1. http://stackoverflow.com/questions/101268/hidden-features-of-python

   a) Argument Unpacking:
Function argument unpacking
You can unpack a list or a dictionary as function arguments using * and **.
For example:

def draw_point(x, y):
    # do some magic

point_foo = (3, 4)
point_bar = {'y': 3, 'x': 2}

draw_point(*point_foo)
draw_point(**point_bar)

   b) Dictionaries have a get() method

Dictionaries have a 'get()' method. If you do d['key'] and key isn't there, you get an exception. If you do d.get('key'), you get back None if 'key' isn't there. You can add a second argument to get that item back instead of None, eg: d.get('key', 0).

   c) enumerate
Wrap an iterable with enumerate and it will yield the item along with its index.
For example:
>>> a = ['a', 'b', 'c', 'd', 'e']
>>> for index, item in enumerate(a): print index, item
...
0 a
1 b
2 c
3 d
4 e
>>>

   d) Creating generators objects
If you write
x=(n for n in foo if bar(n))
you can get out the generator and assign it to x. Now it means you can do
for n in x:
The advantage of this is that you don't need intermediate storage, which you would need if you did
x = [n for n in foo if bar(n)]
In some cases this can lead to significant speed up.
You can append many if statements to the end of the generator, basically replicating nested for loops:
>>> n = ((a,b) for a in range(0,2) for b in range(4,6))
>>> for i in n:
...   print i

(0, 4)
(0, 5)
(1, 4)
(1, 5)

   e) The step argument in slice operators. For example:

a = [1,2,3,4,5]
>>> a[::2]  # iterate over the whole list in 2-increments
[1,3,5]
The special case x[::-1] is a useful idiom for 'x reversed'.

>>> a[::-1]
[5,4,3,2,1]

   20:23 - 20:34


2012.03.06
----------

   1. ipython save
   --save 1-20 line to my.py
   %save my_meta_class.py 1-20
   http://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python

   21:12 - 22:17
   line 3

   type:
   type(name of the class,
       tuple of the parent class (for inheritance, can be empty),
       dictionary containing attributes names and values)

    %save my_meta_class2.py 3-21

    my_meta_class3.py

    __metaclass__, 感觉还是很高深,没真正理解,django orm 中先用了再说

2012.02.29
----------

   1. sublime config rope
   call "Rope:New Project"
   edit /.ropeproject/config.py
   prefs.add('python_path', 'D:/PortablePython_1.1_py2.6.1/App/Lib/site-packages/')

2012.02.22
----------

   1. quora

   被外界评价为：Twitter 之后最让人兴奋的产品
   需邀请码注册

   http://www.quora.com/

   https://github.com/renxing/quora-python
   Quora clone write in Python + Tornado + MongoDB

   https://github.com/huacnlee/quora
   Quora clone by Ruby on Rails

2012.02.21
----------

   1. win7,python,django

   django-admin.py startproject mysite
   碰到的几个问题：
   1、无法找到django-admin.py文件？
   解决：django在安装完后，正常会将C:\Python25\Lib\site-packages\django\bin路径添加到path环境变量中，因而可以直接运行django-admin.py。
   但是，我正常安装完后并没有自动添加到环境变量，因此需要手动添加进去。

   2、django-admin.py startproject mysite命令没有创建mysite?

   解决：这个命令在XP下正常（我没试过），我用的win7，无法创建。这属于django的一个bug。
   方法是：修改注册表中 HKEY_CLASSES_ROOT\Applications\python.exe\shell\open\command项为：
   "C:\Python25\python.exe" "%1" %* （缺省情况下，没有后面的%*）
   (save/python.reg)

   弹出txt文件问题解决
   1.对一个.py文件右键-》打开方式-》选择python并勾住始终是用选择的程序打开这种文件。

2012.02.12
----------

   1. Python 要求单元素元组中必须使用逗号，以此消除与圆括号表达式之间的歧义。
   这是新手常犯的错误。
   # Comma correctly in place.
TEMPLATE_DIRS = (
    '/home/django/mysite/templates',
)

2012.02.10
----------

   1. @property 可以将python定义的函数“当做”属性访问

   http://joy2everyone.iteye.com/blog/910950

   utils/parrot.py

   2. @classmethod

   3. python 编程规范
   http://blog.csdn.net/lanphaday/article/details/6601123

   4. pylint

   http://www.ibm.com/developerworks/cn/linux/l-cn-pylint/index.html?ca=drs-cn-1217

   Windows 下的安装
确保 Python 的安装目录和相应的 Scripts 目录已经在环境变量 path 中
先到 http://pypi.python.org/pypi/pylint下载安装包，然后解压到某目录，这里假定在 D:/pylint-0.22.0
进入 D:/pylint-0.22.0 目录，然后在命令行执行以下指令：python setup.py install
在上一步会出错，但会报告成已经成功安装，这时候需要打开 D:/pylint-0.22.0/bin 目录，然后把那里的所有文件拷贝到 Python 的 Scripts 目录下（如：D:/Python26/Scripts）
在命令行尝试执行 pylint，如果输出帮助，则表示已经安装成功

与 PyDev 集成
PyDev 的安装略过...以下是集成配置的过程：

Window -> preferences -> Pydev -> Pylint,选中 "Use pylint?"
在 Location of pylint 处输入你安装的 lint.py 的地址，如：D:/pylint-0.22.0/lint.py
在下方的 Arguments to pass to pylint 处输入 --rcfile="E:/svn/misc/pylint.conf"，以使用自己的 pylintrc 配置
Project -> Properties -> PyDev?-PYTHONPATH 增添项目的源文件目录到"Project Source Folders"。

   --paraot.py
   --ID:E0202 python An attribute affected in hide this method
   --解决方法
   # pylint: disable=W0401, E0202
   # pylint: enable-msg=C0302


   --END